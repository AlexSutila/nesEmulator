#!/usr/bin/env python3

'''
    I am using the mesen emulator to generate execution dumps to compare the instruction execution in my emulator with. Mesen makes it super easy
        so this is just a quick script to parse the output of said dumps and extract them into another singular file with the contents of the mesen
        generated dump as binary, just because it's easier to work with (and doing this within c++ is a pain).

    The dumps generated by mesen contain some additional info on top of the register contents, so this script may or may not change in time based on
        what I wish to test.
'''

from sys import argv # for command line arguments

with open(argv[1], "r") as dump:

    # Output file to be used by the emulator
    outfile = open("outdump.txt", "wb")

    for line in dump.readlines():
        
        # Removes both windows and linux new lines
        curline = line.replace('\r\n', '').replace('\n', '')

        # Extract the register contents and write them to the output file
        outfile.write(int(curline[ 0: 4], 16).to_bytes(2, 'little')) # PC - 16 bits
        outfile.write(int(curline[51:53], 16).to_bytes(1, 'little')) # A  -  8 bits
        outfile.write(int(curline[56:58], 16).to_bytes(1, 'little')) # X  -  8 bits
        outfile.write(int(curline[61:63], 16).to_bytes(1, 'little')) # Y  -  8 bits
        outfile.write(int(curline[66:68], 16).to_bytes(1, 'little')) # P  -  8 bits
        outfile.write(int(curline[72:74], 16).to_bytes(1, 'little')) # S  -  8 bits

